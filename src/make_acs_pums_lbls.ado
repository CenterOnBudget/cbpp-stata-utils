
/***
Title
====== 

__make_acs_pums_lbls__ {hline 2} Make .do files to label American Community Survey PUMS data.


Description
-----------

__make_acs_pums_lbls__ makes {help .do} files to label American Community Survey [public use microdata](https://www.census.gov/programs-surveys/acs/technical-documentation/pums.html). Variable and value labels are copied from the ACS PUMS [data dictionaries](https://www2.census.gov/programs-surveys/acs/tech_docs/pums/data_dict/).

The labels generated by this program are not a substitute for the original data dictionary: they may be truncated and some important notes may be excluded.

The generated .do files will be named __lbl_acs_pums_[year]_[sample]yr.do.__ Files are saved in the current working directory (the default) or in another "destination directory" the user specifies with the __dest_dir__ option.

    {it}Note: {bf:make_acs_pums_lbls} does not support data years prior to 2013.{sf}

Syntax
------ 

> __make_acs_pums_lbls__, __year(_integer_)__ [_options_]

{synoptset 24 tabbed}{...}
{synopthdr}
{synoptline}
{syntab:Required}
	{synopt:{opt year(integer)}}2013 to 2018.{p_end}
	
{syntab:Optional}
    {synopt:{opt sample(integer)}}5 for the five-year sample or 1 for the one-year sample. Defaults to 1.{p_end}
    {synopt:{opt dest_dir(string)}}the directory in which the .do file will be placed. Defaults to the current working directory.{p_end}
	{synopt:{opt keep_txt}}the original data dictionary .txt file will not be deleted after the .do file is created.{p_end}
	{synopt:{opt replace}}existing .do file and data dictionary .txt will be replaced if they exist.{p_end}
	{synopt:{opt doedit}}open the the .do file in the Do-file Editor after it is created.{p_end}


Example(s)
----------

    Make .do file to label 2018 one-year PUMS data. 
        {bf:. make_acs_pums_lbls, year(2018)}

    RMake .do file to label the 2014 five-year sample, and save the file to my_do_files.
        {bf:. make_acs_pums_lbls, year(2014) sample(5) dest_dir(my_do_files)}

		
Website
-------

[github.com/CenterOnBudget/cbppstatautils](https://github.com/CenterOnBudget/cbppstatautils)

- - -

This help file was dynamically produced by 
[MarkDoc Literate Programming package](http://www.haghish.com/markdoc/) 
***/

* capture program drop make_acs_pums_lbls

program define make_acs_pums_lbls

	syntax , year(integer) [sample(integer 1) dest_dir(string) keep_txt replace doedit]
	
	if !inrange(`year', 2013, 2018){
		display as error "year(`year') invalid or unsupported. Year must be between 2013 and 2018."
		exit
	}

	local dest_dir = cond("`dest_dir'" == "", c(pwd), "`dest_dir'")
	
	* Download data dictionary from Census Bureau FTP -------------------------

	if `sample' == 1 {
		local yr = substr("`year'", 3, 4)
		local dict_file_name = cond(`year' > 2016,						///
									"PUMS_Data_Dictionary_`year'", 		///
									"PUMSDataDict`yr'")
	}
	if `sample' == 5 {
		local start_year = `year' - 4
		local dict_file_name "PUMS_Data_Dictionary_`start_year'-`year'"
	}

	local dest_file = "`dest_dir'/pums_dict_`year'_`sample'yr.txt"
	copy "https://www2.census.gov/programs-surveys/acs/tech_docs/pums/data_dict/`dict_file_name'.txt"	///
				 "`dest_file'", replace	

	* Import and parse data dictionary ----------------------------------------

	quietly {
		infix str500 input 1-500  using "`dest_file'", clear
		
		generate str500 output = "", before(input)
		replace input = strtrim(stritrim(input))
		
		split input, generate(value) parse(".")		// split by value definition (.)
		split input, generate(token)				// split by word

		// detect variable name rows
		// after 2017, data type was added to the variable name line of the 
		// data dictionary text file
		local varname_row_wordcount = cond(`year' < 2017, 2, 3) 	
		local varname_row_token = cond(`year' < 2017, "token3", "token4")

		generate is_varname = input[_n-1] == ""	&								///		
							  wordcount(input) == `varname_row_wordcount' & 	///
							  `varname_row_token' == "",						///
							  after(input)
		generate varname = lower(token1) if is_varname, after(is_varname)
							  
		// variable labels
		generate var_lbl = input[_n+1] if is_varname, after(varname)	
		replace output = "capture label variable " + varname + " " + 	///
						 `"""' + var_lbl + `"""' 						///
						 if is_varname & var_lbl != ""
		// value labels
		replace varname = varname[_n-1] if varname == ""	// fill down 
		generate is_value_lbl = regexm(token2, "^\."), before(value1)
		generate label = substr(input, strpos(input, "." ) + 1, .) if is_value_lbl,		///
						 after(is_value_lbl)
		replace output = "capture label define " + varname + "_lbl " + value1 + " " + 	///
						 `"""' + label + `"""' + ", add" 								///
						 if is_value_lbl & !strmatch(input, "*..*") & !regexm(value1, "^b")
		egen var_has_value_lbls = max(regexm(output, "label define")), by(varname)				 
		replace output = "capture label values " + varname + " " + varname + "_lbl"		///
						 if var_has_value_lbls & is_varname[_n+1]				 
		// notes
		generate is_note = ustrregexm(token1, "Note:", 1)
		replace is_note = is_note[_n-1] if !is_note & 					///
										   varname == varname[_n-1]  &	///
										   input != ""
		replace is_note = 0 if missing(is_note)
		generate note_clean = ustrregexrf(input, "note: ", "", 1) if is_note
		replace output = "capture note " + varname + ": " + note_clean if is_note

		// cleanup 
		keep if output != "" | is_varname 
		duplicates drop if output != ""
		keep output is_varname varname
		// add white space (while preserving order within a variable's lines)
		expand 2 if is_varname, generate(new_obs)
		replace output = "" if new_obs
		sort varname, stable
		// add header
		insobs 3, before(1)
		replace output = "* Generated $S_DATE by program 'make_acs_pums_lbls'" in 1
		keep output
		compress
	}
	
	* Export and cleanup ------------------------------------------------------
	
	outfile using "`dest_dir'/lbl_acs_pums_`year'_`sample'yr.do", noquote `replace'
	display as text "Saved as `dest_dir'/lbl_acs_pums_`year'_`sample'yr.do"
	if "`keep_txt'" == "" {
		quietly erase "`dest_file'"
	}
	clear
	if "`doedit'" != "" {
		doedit "`dest_dir'/lbl_acs_pums_`year'_`sample'yr.do"
	}

end

